version: '3.8'

services:
    dev:
        container_name: athena_api_dev
        image: athena-api-dev:1.0.0
        build:
            context: .
            target: development
            dockerfile: ./Dockerfile
        command: npm run start:debug
        ports:
            - 3001:3001
            - 9229:9229
        networks:
            - athena-api-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped
        depends_on:
            - postgres

    prod:
        container_name: athena_api_prod
        image: athena-api-prod:1.0.0
        build:
            context: .
            target: production
            dockerfile: ./Dockerfile
        command: npm run start:prod
        ports:
            - 3000:3000
            - 9229:9229
        networks:
            - athena-api-network
        volumes:
            - .:/usr/src/app
            - /usr/src/app/node_modules
        restart: unless-stopped

    postgres:
        image: postgres:alpine
        ports:
        - '5432:5432'
        container_name: 'postgres-alpine'
        restart: always
        volumes:
        - pg-data:/var/lib/postgresql/data
        environment:
            POSTGRES_USER: athena
            POSTGRES_PASSWORD: athena

networks:
    athena-api-network:
      name: athena-api-network

volumes:
  pg-data:
